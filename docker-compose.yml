services:
  kc_db:
    image: postgres:16
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
    volumes:
      - kc_db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U keycloak -d keycloak"]
      interval: 5s
      timeout: 5s
      retries: 10

  keycloak:
    image: quay.io/keycloak/keycloak:25.0
    command: ["start-dev", "--import-realm"]
    depends_on:
      kc_db:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://kc_db:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    volumes:
      - ./keycloak/realms:/opt/keycloak/data/import:ro

  api_db:
    image: postgres:16
    environment:
      POSTGRES_DB: forms_api
      POSTGRES_USER: forms_user
      POSTGRES_PASSWORD: forms_pass
    volumes:
      - api_db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U forms_user -d forms_api"]
      interval: 5s
      timeout: 5s
      retries: 10

  auth_api:
    build:
      context: ./auth-api
      dockerfile: Dockerfile
    depends_on:
      keycloak:
        condition: service_started
      api_db:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://api_db:5432/forms_api
      SPRING_DATASOURCE_USERNAME: forms_user
      SPRING_DATASOURCE_PASSWORD: forms_pass
      SPRING_JPA_HIBERNATE_DDL_AUTO: validate
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI: http://keycloak:8080/realms/forms-realm
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI: http://keycloak:8080/realms/forms-realm/protocol/openid-connect/certs
      APP_CORS_ALLOWED_ORIGINS: http://localhost:5173
    ports:
      - "8081:8081"

volumes:
  kc_db_data:
  api_db_data:
